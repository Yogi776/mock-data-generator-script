mock_data_generator:
  settings:
    output_format: json  # Options: json or csv
    record_count: 10000  # Number of records to generate for customers
    seed: 42             # Seed for reproducible data generation

  domains:
    - name: customers
      description: Comprehensive customer data including demographic, financial, and lifestyle details.
      fields:
        # Primary Key
        - name: customer_id
          type: primary_key
          range:
            start: 1
            end: 10001

        # Basic Information
        - name: first_name
          type: string
          faker: first_name

        - name: last_name
          type: string
          faker: last_name

        - name: email_id
          type: string
          faker: email

        # Social Class
        - name: social_class
          type: predefined_list
          values: ["Lower", "Middle", "Upper"]
          probabilities: [0.3, 0.6, 0.1]

        # Annual Income (depends on social_class)
        - name: annual_income
          type: dependency
          dependency:
            field: social_class
            values:
              Lower:
                min: 20000
                max: 30000
              Middle:
                min: 35000
                max: 50000
              Upper:
                min: 55000
                max: 850000

        # Degree of Loyalty (depends on social_class)
        - name: degree_of_loyalty
          type: dependency
          dependency:
            field: social_class
            values:
              Lower: ["Bronze"]
              Middle: ["Silver", "Gold"]
              Upper: ["Gold", "Platinum"]

        # Registration Date
        - name: register_date
          type: datetime
          format: YYYY-MM-DD
          range:
            start: "2010-01-01"
            end: "2023-12-31"

    - name: products
      description: Product catalog with detailed attributes and unique combinations.
      unique_combinations: true  # Ensure all product records are unique
      fields:
        # Primary Key
        - name: product_id
          type: primary_key
          range:
            start: 1000
            end: 9000

        # SKU (depends on product_id)
        - name: sku_id
          type: computed
          formula: f"SKU-{product_id}"

#        # Product Name
#        - name: product_name
#          type: string
#          faker: word

        # Product Category
        - name: category_name
          type: predefined_list
          values: ["Electronic", "Kitchen", "Books", "Clothing"]
          probabilities: [0.3, 0.25, 0.3, 0.15]

        # Subcategory (depends on category_name)
        - name: subcategory_name
          type: dependency
          dependency:
            field: category_name
            values:
              Electronic: ["Home Appliance", "Laptop", "Accessories", "Mobile"]
              Kitchen: ["Cookware", "Cleaning Supplier", "Home Decor"]
              Books: ["Action & Adventure", "Biographies", "Business & Economics", "Science"]
              Clothing: ["Mens", "Womens", "Kids"]


        # Product Color
        - name: product_color
          type: predefined_list
          values: ["Red", "Blue", "White", "Black", "Other"]
          probabilities: [0.2, 0.2, 0.2, 0.3, 0.1]

        # List Price (depends on category_name)
        - name: list_price
          type: dependency
          dependency:
            field: category_name
            values:
              Electronic: {"min": 100, "max": 500}
              Kitchen: {"min": 20, "max": 200}
              Books: {"min": 5, "max": 50}
              Clothing: {"min": 10, "max": 100}

        # Sale Price (depends on list_price)
        - name: sale_price
          type: computed
          formula: list_price * random.uniform(0.8, 0.95)

        # Brand
        - name: brand_name
          type: dependency
          dependency:
            field: category_name
            values:
              Electronic: ["Samsung", "Apple", "Sony", "LG"]
              Kitchen: ["Tefal", "Philips", "KitchenAid"]
              Books: ["Penguin", "HarperCollins", "Random House"]
              Clothing: ["Nike", "Adidas", "Uniqlo", "Zara"]


        # Parent Company
        - name: parent_company
          type: dependency
          dependency:
            field: category_name
            values:
              Electronic: ["Samsung Group", "Apple Inc.", "Sony Corporation", "LG Corporation"]
              Kitchen: ["SEB Group", "Philips Group", "Whirlpool Corporation"]
              Books: ["Penguin Random House", "HarperCollins", "Bertelsmann"]
              Clothing: ["Nike Inc.", "Adidas AG", "Fast Retailing", "Inditex"]

        # Launched Timestamp
        - name: launched_ts
          type: datetime
          format: YYYY-MM-DD HH:mm:ss
          range:
            start: "2015-01-01 00:00:00"
            end: "2023-12-31 23:59:59"
